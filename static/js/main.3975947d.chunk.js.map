{"version":3,"sources":["components/Toggler/Toggler.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Content/Content.module.css","utils/generateId.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","utils/methods.js","context/ThemeContext.js","hoc/withTheme.js","components/Content/Content.js","components/Toggler/Toggler.js","components/App/App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","nameInputId","shortid","generate","numberInputId","ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onAddContact","reset","this","generateId","onSubmit","className","styles","form","formLabel","htmlFor","formInput","type","onChange","id","disabled","length","Component","ContactListItem","onDeleteContact","item","btn","onClick","ContactList","contacts","list","map","key","Filter","onChangeFilter","localStorage","setItem","JSON","stringify","err","Error","items","getItem","parse","themeConfig","light","fontColor","bodyBg","dark","ThemeContext","React","createContext","withTheme","WrappedComponent","Consumer","theme","save","methods","get","filter","changeFilter","addContact","contact","some","savedContact","toLowerCase","toast","configure","error","contactToAdd","deleteContact","filterContacts","includes","prevProps","prevState","filteredContacts","style","color","config","background","title","themeSelector","label","switch","checked","event","toggleTheme","currentTarget","slider","App","bind","newTheme","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,cAAgB,+BAA+B,MAAQ,uBAAuB,OAAS,wBAAwB,OAAS,0B,mBCA1ID,EAAOC,QAAU,CAAC,KAAO,8BAA8B,IAAM,+B,mBCA7DD,EAAOC,QAAU,CAAC,KAAO,4B,mBCAzBD,EAAOC,QAAU,CAAC,MAAQ,yB,uNCIX,GAAEC,YAHGC,IAAQC,WAGEC,cAFRF,IAAQC,Y,gBCsEfE,E,4MA7DbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,MAAOJ,EAAa,EAAbA,KACjC,EAAKK,SAAL,eAAiBL,EAAOI,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,aAAX,eAA6B,EAAKX,QAElC,EAAKY,S,EAGPA,MAAQ,WACN,EAAKN,SAAS,CAAEL,KAAM,GAAIC,OAAQ,M,uDAG1B,IAAD,EACkBW,KAAKb,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OACNP,EAA+BmB,EAA/BnB,YAAaG,EAAkBgB,EAAlBhB,cAErB,OACE,0BAAMiB,SAAUF,KAAKN,aAAcS,UAAWC,IAAOC,MACnD,6BACE,2BAAOF,UAAWC,IAAOE,UAAWC,QAASzB,GAA7C,QAGA,2BACEqB,UAAWC,IAAOI,UAClBC,KAAK,OACLjB,MAAOJ,EACPsB,SAAUV,KAAKV,aACfF,KAAK,OACLuB,GAAI7B,KAGR,6BACE,2BAAOqB,UAAWC,IAAOE,UAAWC,QAAStB,GAA7C,UAGA,2BACEkB,UAAWC,IAAOI,UAClBC,KAAK,MACLjB,MAAOH,EACPqB,SAAUV,KAAKV,aACfF,KAAK,SACLuB,GAAI1B,KAGR,4BAAQwB,KAAK,SAASG,UAAWxB,EAAKyB,SAAWxB,EAAOwB,QAAxD,oB,GA1DkBC,a,QCgBXC,MAnBf,YAA6D,IAAlC3B,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQ2B,EAAmB,EAAnBA,gBACvC,OACE,yBAAKb,UAAWc,QACd,2BACG7B,EADH,IACUC,GAEV,4BAAQc,UAAWe,MAAKT,KAAK,SAASU,QAASH,GAA/C,Y,iBCsBSI,EA3BK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUL,EAAsB,EAAtBA,gBAC/B,OACE,wBAAIb,UAAWC,IAAOkB,MACnBD,EAASE,KAAI,gBAAGZ,EAAH,EAAGA,GAAIvB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,wBAAImC,IAAKb,GACP,kBAAC,EAAD,CACEvB,KAAMA,EACNC,OAAQA,EACR2B,gBAAiB,kBAAMA,EAAgBL,YCXpC,SAASc,EAAT,GAA4C,IAA1BjC,EAAyB,EAAzBA,MAAOkC,EAAkB,EAAlBA,eACtC,OACE,6BACE,oDACA,2BACEjB,KAAK,OACLjB,MAAOA,EACPkB,SAAU,SAACf,GAAD,OAAO+B,EAAe/B,EAAEJ,OAAOC,WCTjD,IAiBe,EARF,SAACgC,EAAKhC,GACjB,IACEmC,aAAaC,QAAQJ,EAAKK,KAAKC,UAAUtC,IACzC,MAAOuC,GACP,MAAM,IAAIC,QAIC,EAjBH,SAAAR,GACV,IACE,IAAMS,EAAQN,aAAaO,QAAQV,GACnC,OAAOS,EAAQJ,KAAKM,MAAMF,GAAS,KACnC,MAAOF,GACP,MAAM,IAAIC,Q,iBCHDI,G,MAAc,CACzBC,MAAO,CACLC,UAAW,QACXC,OAAQ,SAEVC,KAAM,CACJF,UAAW,QACXC,OAAQ,WAKGE,EADMC,IAAMC,cAAcP,EAAYC,OCAtCO,EAVG,SAAAC,GAChB,OAAO,SAAmBhD,GACxB,OACE,kBAAC,EAAaiD,SAAd,MACG,SAAAC,GAAK,OAAI,kBAACF,EAAD,iBAAsBhD,EAAtB,CAA6BkD,MAAOA,UCM9CC,EAAcC,EAARC,EAAQD,EAwFPL,I,4MArFbzD,MAAQ,CACNkC,SAAU,GACV8B,OAAQ,I,EAiBVC,aAAe,SAAAD,GACb,EAAK1D,SAAS,CAAE0D,Y,EAGlBE,WAAa,SAAAC,GAMX,GALuB,EAAKnE,MAAMkC,SAASkC,MACzC,SAAAC,GAAY,OACVA,EAAapE,KAAKqE,gBAAkBH,EAAQlE,KAAKqE,iBAInDC,IAAMC,YACND,IAAME,MAAN,UAAeN,EAAQlE,KAAvB,iCACK,CACL,IAAMyE,EAAY,2BACbP,GADa,IAEhB3C,GAAI5B,IAAQC,aAEd,EAAKS,UAAS,SAAAN,GAAK,MAAK,CACtBkC,SAAS,GAAD,mBAAMlC,EAAMkC,UAAZ,CAAsBwC,U,EAKpCC,cAAgB,SAAAnD,GACd,EAAKlB,UAAS,SAAAN,GAAK,MAAK,CACtBkC,SAAUlC,EAAMkC,SAAS8B,QAAO,SAAAG,GAAO,OAAIA,EAAQ3C,KAAOA,KAC1DwC,OAAQ,Q,EAIZY,eAAiB,SAAC1C,EAAU8B,GAC1B,OAAO9B,EAAS8B,QAAO,SAAAG,GAAO,OAC5BA,EAAQlE,KAAKqE,cAAcO,SAASb,EAAOM,mB,kEA9CzCP,EAAI,aACNlD,KAAKP,SAAS,CACZ4B,SAAS,YAAK6B,EAAI,iB,yCAKLe,EAAWC,GACxBA,EAAU7C,WAAarB,KAAKb,MAAMkC,UACpC2B,EAAK,WAAYhD,KAAKb,MAAMkC,Y,+BAyCtB,IAAD,EACsBrB,KAAKb,MAA1BkC,EADD,EACCA,SAAU8B,EADX,EACWA,OACZgB,EAAmBnE,KAAK+D,eAAe1C,EAAU8B,GAC/CJ,EAAU/C,KAAKH,MAAfkD,MAER,OACE,yBACEqB,MAAO,CACLC,MAAOtB,EAAMuB,OAAOhC,UACpBiC,WAAYxB,EAAMuB,OAAO/B,SAG3B,wBAAIpC,UAAWC,IAAOoE,OAAtB,aACA,kBAAC,EAAD,CAAa1E,aAAcE,KAAKqD,aAChC,wCACChC,EAASR,OAAS,GACjB,kBAACY,EAAD,CAAQjC,MAAO2D,EAAQzB,eAAgB1B,KAAKoD,eAE7C/B,EAASR,OAAS,GACjB,kBAAC,EAAD,CACEQ,SAAU8C,EACVnD,gBAAiBhB,KAAK8D,qB,GA9EZhD,c,iBCgBP8B,I,uKA1BH,IAAD,OACCG,EAAU/C,KAAKH,MAAfkD,MACR,OACE,yBACEqB,MAAO,CACLG,WAAYxB,EAAMuB,OAAO/B,OACzB8B,MAAOtB,EAAMuB,OAAOhC,WAEtBnC,UAAWC,IAAOqE,eAElB,0BAAMtE,UAAWC,IAAOsE,QACxB,2BAAOvE,UAAWC,IAAOuE,QACvB,2BACElE,KAAK,WACLmE,QAAwB,UAAf7B,EAAMtC,KACfC,SAAU,SAAAmE,GAAK,OACb,EAAKhF,MAAMiF,YAAYD,EAAME,cAAcvF,UAG/C,0BAAMW,UAAWC,IAAO4E,e,GApBZlE,cCgCPmE,E,4MA1Bb9F,MAAQ,CACN4D,MAAO,S,EAET+B,YAAc,EAAKA,YAAYI,KAAjB,gB,0DAEFC,GACVnF,KAAKP,SAAS,CACZsD,MAA4B,SAArB/C,KAAKb,MAAM4D,MAAmB,QAAU,W,+BAKjD,OACE,kBAAC,EAAaqC,SAAd,CACE5F,MAAO,CACLiB,KAAMT,KAAKb,MAAM4D,MACjBuB,OAAQlC,EAAYpC,KAAKb,MAAM4D,SAGjC,kBAAC,EAAD,CAAS+B,YAAa9E,KAAK8E,cAC3B,kBAAC,EAAD,W,GArBUhE,a,MCJlBuE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCR1B7G,EAAOC,QAAU,CAAC,KAAO,0BAA0B,UAAY,+BAA+B,UAAY,kC","file":"static/js/main.3975947d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeSelector\":\"Toggler_themeSelector__2SJd-\",\"label\":\"Toggler_label__3CRB4\",\"switch\":\"Toggler_switch__3eQaa\",\"slider\":\"Toggler_slider__3Fv64\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__kRAbw\",\"btn\":\"ContactListItem_btn__cPUQw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2E43_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Content_title__13OOV\"};","import shortid from 'shortid';\r\n\r\nconst nameInputId = shortid.generate();\r\nconst numberInputId = shortid.generate();\r\n\r\nexport default { nameInputId, numberInputId };\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport generateId from '../../utils/generateId';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target: { value, name } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { nameInputId, numberInputId } = generateId;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <div>\r\n          <label className={styles.formLabel} htmlFor={nameInputId}>\r\n            Name\r\n          </label>\r\n          <input\r\n            className={styles.formInput}\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            name=\"name\"\r\n            id={nameInputId}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className={styles.formLabel} htmlFor={numberInputId}>\r\n            Number\r\n          </label>\r\n          <input\r\n            className={styles.formInput}\r\n            type=\"tel\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            name=\"number\"\r\n            id={numberInputId}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={!name.length || !number.length}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { item, btn } from \"./ContactListItem.module.css\";\r\n\r\nfunction ContactListItem({ name, number, onDeleteContact }) {\r\n  return (\r\n    <div className={item}>\r\n      <p>\r\n        {name}:{number}\r\n      </p>\r\n      <button className={btn} type=\"button\" onClick={onDeleteContact}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <ContactListItem\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={() => onDeleteContact(id)}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","const get = key => {\r\n  try {\r\n    const items = localStorage.getItem(key);\r\n    return items ? JSON.parse(items) : null;\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nconst save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nexport default { save, get };\r\n","import React from 'react';\r\n\r\nexport const themeConfig = {\r\n  light: {\r\n    fontColor: 'black',\r\n    bodyBg: 'white',\r\n  },\r\n  dark: {\r\n    fontColor: 'white',\r\n    bodyBg: 'black',\r\n  },\r\n};\r\n\r\nconst ThemeContext = React.createContext(themeConfig.light);\r\nexport default ThemeContext;\r\n","import React from 'react';\r\nimport ThemeContext from '../context/ThemeContext';\r\n\r\nconst withTheme = WrappedComponent => {\r\n  return function WithTheme(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => <WrappedComponent {...props} theme={theme} />}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withTheme;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\nimport methods from '../../utils/methods';\r\n\r\nimport styles from './Content.module.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport withTheme from '../../hoc/withTheme';\r\n\r\nconst { save, get } = methods;\r\n\r\nclass Content extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (get('contacts')) {\r\n      this.setState({\r\n        contacts: [...get('contacts')],\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      save('contacts', this.state.contacts);\r\n    }\r\n  }\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  addContact = contact => {\r\n    const isContactExist = this.state.contacts.some(\r\n      savedContact =>\r\n        savedContact.name.toLowerCase() === contact.name.toLowerCase(),\r\n    );\r\n\r\n    if (isContactExist) {\r\n      toast.configure();\r\n      toast.error(`${contact.name} is already in contacts.`);\r\n    } else {\r\n      const contactToAdd = {\r\n        ...contact,\r\n        id: shortid.generate(),\r\n      };\r\n      this.setState(state => ({\r\n        contacts: [...state.contacts, contactToAdd],\r\n      }));\r\n    }\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(state => ({\r\n      contacts: state.contacts.filter(contact => contact.id !== id),\r\n      filter: '',\r\n    }));\r\n  };\r\n\r\n  filterContacts = (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const filteredContacts = this.filterContacts(contacts, filter);\r\n    const { theme } = this.props;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          color: theme.config.fontColor,\r\n          background: theme.config.bodyBg,\r\n        }}\r\n      >\r\n        <h1 className={styles.title}>Phonebook</h1>\r\n        <ContactForm onAddContact={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        {contacts.length > 2 && (\r\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        )}\r\n        {contacts.length > 0 && (\r\n          <ContactList\r\n            contacts={filteredContacts}\r\n            onDeleteContact={this.deleteContact}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(Content);\r\n","import React, { Component } from 'react';\r\nimport styles from './Toggler.module.css';\r\nimport withTheme from '../../hoc/withTheme';\r\n\r\nclass Toggler extends Component {\r\n  render() {\r\n    const { theme } = this.props;\r\n    return (\r\n      <div\r\n        style={{\r\n          background: theme.config.bodyBg,\r\n          color: theme.config.fontColor,\r\n        }}\r\n        className={styles.themeSelector}\r\n      >\r\n        <span className={styles.label}></span>\r\n        <label className={styles.switch}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={theme.type === 'light'}\r\n            onChange={event =>\r\n              this.props.toggleTheme(event.currentTarget.value)\r\n            }\r\n          />\r\n          <span className={styles.slider}></span>\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(Toggler);\r\n","import React, { Component } from 'react';\r\n\r\nimport Content from '../Content/Content';\r\nimport Toggler from '../Toggler/Toggler';\r\nimport ThemeContext from '../../context/ThemeContext';\r\nimport { themeConfig } from '../../context/ThemeContext';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    theme: 'light',\r\n  };\r\n  toggleTheme = this.toggleTheme.bind(this);\r\n\r\n  toggleTheme(newTheme) {\r\n    this.setState({\r\n      theme: this.state.theme === 'dark' ? 'light' : 'dark',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ThemeContext.Provider\r\n        value={{\r\n          type: this.state.theme,\r\n          config: themeConfig[this.state.theme],\r\n        }}\r\n      >\r\n        <Toggler toggleTheme={this.toggleTheme} />\r\n        <Content />\r\n      </ThemeContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1Nd-8\",\"formLabel\":\"ContactForm_formLabel__2u60H\",\"formInput\":\"ContactForm_formInput__e5fiv\"};"],"sourceRoot":""}